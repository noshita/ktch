[tool.poetry]
authors = ["Noshita, Koji <noshita@morphometrics.jp>"]
classifiers = [
  'Intended Audience :: Science/Research',
  'Intended Audience :: Developers',
  'License :: OSI Approved :: Apache Software License',
  'Programming Language :: Python',
  'Topic :: Software Development',
  'Topic :: Scientific/Engineering',
  'Operating System :: Microsoft :: Windows',
  'Operating System :: POSIX',
  'Operating System :: Unix',
  'Operating System :: MacOS',
  'Programming Language :: Python :: 3.8',
]
description = "ktch is a python package for model-based morphometrics."
homepage = "https://doc.ktch.dev"
keywords = ["morphometrics", "theoretical morphology"]
license = "Apache-2.0"
name = "ktch"
readme = "README.md"
repository = "https://github.com/noshita/ktch"
version = "0.4.0"

[tool.poetry.dependencies]
numpy = ">=1.22"
pandas = ">=1.5"
python = "^3.9"
scikit-learn = ">=1.2"
scipy = ">=1.8"
toml = ">=0.10"

[tool.poetry.extras]
docs = [
  "sphinx",
  "sphinx-gallery",
  "sphinx_rtd_theme",
  "numpydoc",
  "matplotlib",
  "plotly",
]

[tool.poetry.group.dev.dependencies]
invoke = "^1.4.1"
jupyter = "^1.0.0"
jupyterlab = "^3.4.4"
jupytext = "^1.14.5"
liccheck = "^0.7.2"
llvmlite = "^0.41"
matplotlib = "^3.8.2"
module-name = "^0.6.0"
numba = "^0.58"
opencv-python = "^4.7.0.68"
plotly = "^5.9.0"
poetry2conda = "^0.3.0"
pytest = "^7.1"
pytest-cov = "^3.0"
seaborn = "^0.13.0"
setuptools = "<60.0"
tqdm = "^4.64.1"
tslearn = "^0.5.3.2"
xarray = "^2022.6.0"

[tool.poetry.group.doc.dependencies]
myst-nb = "^0.17.2"
nbsphinx = "^0.9.2"
numpydoc = "^1.4.0"
pydata-sphinx-theme = "^0.12"
sphinx = "^5.3"
sphinx-autobuild = "^2021.3"
sphinx-favicon = "^1.0.1"
sphinx-gallery = "^0.11"
sphinx-sitemap = "^2.5.0"
sphinxcontrib-bibtex = "^2.5"

[build-system]
build-backend = "poetry.core.masonry.api"
requires = ["poetry-core>=1.0.0"]

[tool.poetry2conda]
name = "ktch"

# [tool.pytest.ini_options]
# minversion = "6.1"
# addopts = "--doctest-modules"

[tool.liccheck]
authorized_licenses = [
  "bsd",
  "new bsd",
  "bsd license",
  "simplified bsd",
  "apache",
  "apache 2.0",
  "apache software license",
  "isc license",
  "isc license (iscl)",
  "mit",
  "mit license",
  "python software foundation license",
  "Python Software Foundation",
]
unauthorized_licenses = [
  "gpl v3",
  "gnu agplv3",
]

[tool.liccheck.authorized_packages]
uuid = "<=1.30"

[tool.ruff]
exclude = [
  ".git",
  "__pycache__",
  "dist",
  "doc/_build",
  "doc/notebooks",
  "doc/generated",
]
line-length = 88

[tool.ruff.lint]
# all rules can be found here: https://beta.ruff.rs/docs/rules/
ignore = [
  "E731", # do not assign a lambda expression, use a def
  "E741", # do not use variables named 'l', 'O', or 'I'
]
select = ["E", "F", "W", "I"]
